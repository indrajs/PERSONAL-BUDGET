<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>Dashboard | Reports</title>
  <meta content="" name="description">
  <meta content="" name="keywords">

  <!-- Favicons -->
  <link href="../assets/img/favicon.png" rel="icon">
  <link href="../assets/img/apple-touch-icon.png" rel="apple-touch-icon">

  <!-- Google Fonts -->
  <link href="https://fonts.gstatic.com" rel="preconnect">
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="../assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="../assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
  <link href="../assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="../assets/vendor/quill/quill.snow.css" rel="stylesheet">
  <link href="../assets/vendor/quill/quill.bubble.css" rel="stylesheet">
  <link href="../assets/vendor/remixicon/remixicon.css" rel="stylesheet">
  <link href="../assets/vendor/simple-datatables/style.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="../assets/css/style.css" rel="stylesheet">

  <style>
    .container {
            margin-top: 20px;
        }
        .section-header {
            background-color: #007bff; /* Primary color */
            color: white;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .table {
            background-color: white; /* White background for the table */
            border-radius: 5px;
            overflow: hidden;
        }
        .table th, .table td {
            vertical-align: middle; /* Center-align content */
        }
        .expense-item {
            padding: 10px;
            border-bottom: 1px solid #dee2e6; /* Light gray border */
        }
        .no-expenses {
            color: #6c757d; /* Gray text for no expenses */
        }

  </style>

</head>

<body>

  <!-- ======= Header ======= -->
   <%- include('header.ejs') %>
  <!-- End Header -->

  <!-- ======= Sidebar ======= -->
   <%- include('aside.ejs') %>
  <!-- End Sidebar-->

  <main id="main" class="main">

    <h1>Over all Report</h1>


    <div class="row">
        <div class="col-md-12">
            <!-- Column Chart: Current month vs Previous month -->
            <canvas id="categoryExpenseChart" ></canvas>
        </div>
    </div>
    <br>
    <div class="row mt-4">
        <div class="col-md-12">
            <!-- Line Chart: Total expenses per month -->
            <canvas id="monthlyExpenseChart" ></canvas>
        </div>
    </div>

    
    
    <div class="container">
        <section>
            <div class="row">
                <div class="col-md-6">
                    <!-- Detailed Summary of Current Expenses -->
                    <div class="section-header">
                        <h4>Detailed Expense Overview</h4>
                    </div>
                    <p>Here, you can concentrate and eliminate unwanted expenses.</p>
                    <ul class="list-group">
                        <% const categories = JSON.parse(categoryLabels); %>
                        <% const currentAmounts = JSON.parse(currentMonthAmounts); %>
                        <% const previousAmounts = JSON.parse(previousMonthAmounts); %>
                        <% if (categories.length > 0) { %>
                            <% categories.forEach((category, index) => { %>
                                <li class="expense-item list-group-item">
                                    <strong><%= category %>:</strong> ₹<%= currentAmounts[index].toFixed(2) %> (Current Month)
                                    <% if (previousAmounts[index] !== undefined) { %>
                                        , ₹<%= previousAmounts[index].toFixed(2) %> (Previous Month)
                                    <% } %>
                                </li>
                            <% }); %>
                        <% } else { %>
                            <li class="list-group-item no-expenses">No expenses recorded for the current month.</li>
                        <% } %>
                    </ul>
                </div>
                <div class="col-md-6">
                    <!-- Monthly Summary of Expenses, Income, Balance -->
                    <div class="section-header">
                        <h4>Financial Summary</h4>
                    </div>
                    <p>Show the summary of total expenses, income, balance, and health of the report.</p>
                    <h5>Current Month Summary</h5>
                    <p><strong>Total Expenses:</strong> ₹<%= currentAmounts.reduce((a, b) => a + b, 0).toFixed(2) %></p>
                    <h5>Previous Month Summary</h5>
                    <p><strong>Total Expenses:</strong> ₹<%= previousAmounts.reduce((a, b) => a + b, 0).toFixed(2) %></p>
                    <h5>Monthly Summary</h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Month</th>
                                <th>Total Expenses (₹)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% const monthlyLabelsArray = JSON.parse(monthlyLabels); %>
                            <% const monthlyAmountsArray = JSON.parse(monthlyAmounts); %>
                            <% monthlyLabelsArray.forEach((month, index) => { %>
                                <tr>
                                    <td><%= month %></td>
                                    <td>₹<%= monthlyAmountsArray[index].toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
    
    
    
    

  </main>

  <!-- ======= Footer ======= -->
   <%- include('footer.ejs') %>
  <!-- End Footer -->

  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

  <!-- Vendor JS Files -->
  <script src="../assets/vendor/apexcharts/apexcharts.min.js"></script>
  <script src="../assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <!-- <script src="../assets/vendor/chart.js/chart.umd.js"></script> -->
  <script src="../assets/vendor/echarts/echarts.min.js"></script>
  <script src="../assets/vendor/quill/quill.min.js"></script>
  <script src="../assets/vendor/simple-datatables/simple-datatables.js"></script>
  <script src="../assets/vendor/tinymce/tinymce.min.js"></script>
  <script src="../assets/vendor/php-email-form/validate.js"></script>

  <!-- Template Main JS File -->
  <script src="../assets/js/main.js"></script>

  <script src="../assets/js/chart.js"></script>
  <script src="../assets/js/chartjs-plugin-datalabels.js"></script>

    <script>    
        // Get data from the server-side rendered variables
        const categoryLabels = JSON.parse('<%- categoryLabels %>'); // Get category labels
        const currentMonthAmounts = JSON.parse('<%- currentMonthAmounts %>'); // Current month amounts
        const previousMonthAmounts = JSON.parse('<%- previousMonthAmounts %>'); // Previous month amounts
        const monthlyLabels = JSON.parse('<%- monthlyLabels %>'); // Monthly labels
        const monthlyAmounts = JSON.parse('<%- monthlyAmounts %>'); // Monthly amounts

        // Create a bar chart for current vs previous month expenses
        const ctxBar = document.getElementById('categoryExpenseChart').getContext('2d');

        const categoryExpenseChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: categoryLabels,  // Category labels
                datasets: [
                    {
                        label: 'Current Month Expenses (₹)',
                        data: currentMonthAmounts,  // Current month amounts
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',  // Current month color
                        borderColor: 'rgba(54, 162, 235, 1)', // Border color
                        borderWidth: 2
                    },
                    {
                        label: 'Previous Month Expenses (₹)',
                        data: previousMonthAmounts, // Previous month amounts
                        backgroundColor: 'rgba(255, 99, 132, 0.6)', // Previous month color
                        borderColor: 'rgba(255, 99, 132, 1)', // Border color
                        borderWidth: 2
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        stacked: false
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '₹' + value;  // Add ₹ sign to the y-axis values
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return '₹' + tooltipItem.raw.toFixed(2);  // Format the tooltip to show currency
                            }
                        }
                    }
                }
            }
        });
        

        // CSS to make the canvas responsive
        const canvas = document.getElementById('categoryExpenseChart');
        canvas.style.width = '100%'; // Set the canvas width to 100%
        canvas.style.height = '400px'; // Set a specific height

        

        // Create a line chart for monthly expenses
        const ctxLine = document.getElementById('monthlyExpenseChart').getContext('2d');

        const monthlyExpenseChart = new Chart(ctxLine, {
            type: 'line',
            data: {
                labels: monthlyLabels, // Monthly labels
                datasets: [{
                    label: 'Total Monthly Expenses (₹)',
                    data: monthlyAmounts, // Monthly amounts
                    fill: false,
                    borderColor: 'rgba(75, 192, 192, 1)', // Line color
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '₹' + value;  // Add ₹ sign to the y-axis values
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return '₹' + tooltipItem.raw.toFixed(2);  // Format the tooltip to show currency
                            }
                        }
                    }
                }
            }
        });

        
    </script>
  


</body>

</html>